// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: queries.sql

package pgx

import (
	"context"
)

const clearProducts = `-- name: ClearProducts :exec
TRUNCATE products
`

func (q *Queries) ClearProducts(ctx context.Context) error {
	_, err := q.db.Exec(ctx, clearProducts)
	return err
}

type InsertParams struct {
	Name        string
	Description string
	Categories  []string
	Price       float64
	Features    []string
	Color       string
	Material    string
	Upc         string
}

const products = `-- name: Products :many
SELECT id, name, description, categories, price, features, color, material, upc FROM products LIMIT $1
`

func (q *Queries) Products(ctx context.Context, limit int32) ([]Product, error) {
	rows, err := q.db.Query(ctx, products, limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Product
	for rows.Next() {
		var i Product
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Description,
			&i.Categories,
			&i.Price,
			&i.Features,
			&i.Color,
			&i.Material,
			&i.Upc,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
